{
	"name": "@service/gazitengWebapp",
	"version": "3.0.1",
	"main": "./entrypoint/programmaticAPI",
	"scripts": {
		"post-install": "cd ./source/clientSide/packageManager && yarn workspaces run install",
		"run": "node --eval \"require(process.cwd()).application()\"",
		"run-configuredForContainer": "node --eval \"require(process.cwd()).application({}, { memgraph: { host: 'memgraph' }})\"",
		"run-throughScriptManager": "yarn run scriptManager ./ \".application()\"",
		"container-run-bash": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerCli({})\"",
		"container-run-command": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \" .container.run.dockerCli({ scriptCommand: ' node --eval \\\"  require(process.cwd()).application({}, { memgraph: { host: \\'memgraph\\' }}) \\\"  '}) \"",
		"container-run": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerCli({ scriptCommand: 'yarn run run-configuredForContainer' })\"",
		"container-run-compose": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerComposeCli({ scriptCommand: 'yarn run run-configuredForContainer' })\"",
		"container-run-stack": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerStackCli({ })\"",
		"livereload": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".run.default({})\"",
		"livereload-configuredForContainer": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".run.default({ application: [{},{ memgraph: { host: 'memgraph' }}] })\"",
		"container-livereload": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerCli({ scriptCommand: ' yarn run livereload-configuredForContainer' })\"",
		"container-livereload-compose": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerComposeCli({ scriptCommand: 'yarn run livereload-configuredForContainer' })\"",
		"test": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".test.default({ testPath: ['./test'], shouldDebugger: false, shouldCompileTest: true })\"",
		"test-inspect": "yarn run scriptManager @deployment/deploymentScript \".test.default({ testPath: ['./test'], shouldDebugger: true, shouldCompileTest: true })\"",
		"test-configuredForContainer": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".test.default({ testPath: ['./test'], shouldDebugger: false, shouldCompileTest: true }, { memgraph: {host:'memgraph'} })\"",
		"container-test": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerCli({ scriptCommand: ' yarn run test-configuredForContainer' })\"",
		"container-test-compose": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerComposeCli({ scriptCommand: 'yarn run test-configuredForContainer' })\"",
		"build": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildSourceCode.moduleProject({}, {compile:[/**'./test'*/]})\"",
		"build-configuredForContainer": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildSourceCode.moduleProject({memgraph:{host:'memgraph'}})\"",
		"container-build": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerCli({ scriptCommand: 'yarn run build-configuredForContainer' })\"",
		"container-build-compose": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.run.dockerComposeCli({ scriptCommand: 'yarn run build-configuredForContainer' })\"",
		"release": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildAndRelease.moduleProject({ shouldBuildCode: false })\"",
		"buildAndRelease": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildAndRelease.moduleProject({})\"",
		"image-build": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".container.build.dockerBuildImage({})\""
	},
	"dependencies": {
		"@service/gazitengWebapp-clientSide": "https://github.com/myuseringithub/gazitengWebapp-clientSide#semver:^1.x.x",
		"@service/serviceAccessControl": "https://github.com/AppScriptIO/serviceAccessControl#semver:^2.x.x",
		"@service/serviceApiEndpoint": "https://github.com/AppScriptIO/serviceApiEndpoint#semver:^2.x.x",
		"@service/serviceDynamicContent": "https://github.com/AppScriptIO/serviceDynamicContent#semver:^2.x.x",
		"@service/serviceRealtimeEndpoint": "https://github.com/AppScriptIO/serviceRealtimeEndpoint#semver:^2.x.x"
	},
	"devDependencies": {
		"@deployment/deploymentScript": "https://github.com/AppScriptIO/deploymentScript#semver:^2.x.x",
		"@deployment/javascriptStaticAnalysis": "https://github.com/AppScriptIO/javascriptStaticAnalysis#semver:^2.x.x",
		"@deployment/javascriptTranspilation": "https://github.com/AppScriptIO/javascriptTranspilation#semver:^2.x.x",
		"@deployment/scriptManager": "https://github.com/AppScriptIO/scriptManager#semver:^2.x.x",
		"loadtest": "^4.1.0",
		"neo4j-driver": "^1.7.5",
		"request": "^2.88.0",
		"request-promise": "^4.2.5",
		"typescript": "^3.3.3333"
	},
	"flat": false
}